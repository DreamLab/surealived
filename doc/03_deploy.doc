[PL]
\section{Uruchomienie}

\subsection{Schemat dzia³ania}
Na poni¿szym diagramie przedstawiony jest schemat przep³ywu
danych pomiêdzy testerem a~synchronizatorem.
[EN]
\section{Deploy}
\subsection{Flow diagram}

[ALL]
\begin{center}
\epsfig{file=sd-diagram,width=13cm}
\end{center}

[PL]
\noindent Po lewej stronie diagramu znajduje siê tester (surealived),
z³o¿ony z dwóch procesów -- \textbf{watchdoga} i~\textbf{testera}.
Po prawej stronie jest jednoprocesowy synchronizator (ipvssync) wpiêty do IPVS
-- \textbf{synchronizer}.
Na ¶rodku diagramu umieszczone zosta³y pliki i~katalogi bior±ce udzia³
w wymianie danych miêdzy aplikacjami. 

Kluczowym plikiem wspólnym dla testera i synchronizatora jest 
\textit{surealived.cfg}, którego sk³adnia opisana jest w nastêpnym
rozdziale. Jest to prosty plik typu \textit{''klucz warto¶æ''} opisuj±cy
parametry dzia³ania obu aplikacji.

Tester definicjê us³ug do przetestowania bierze z pliku \textit{services.xml}%
\footnote{Oczywi¶cie plik ten mo¿e siê nazywaæ zupe³nie inaczej, my za³o¿yli¶my,
¿e jest to akurat \textit{services.xml}.}. 
Widok reali, ich wag i to czy s± wpiête przes³aniane jest przez dwa pliki --
\textit{offline.dump} oraz \textit{override.dump}. Plik \textit{offline.dump}
jest zapisywany przez tester i zawiera reale, których nie uda³o siê poprawnie
przetestowaæ. Dziêki temu po starcie podejrzane serwery nie s± wpinane lub
wpinane z wag± = 0 do IPVS.
Plik, który równie¿ przes³ania konfiguracjê to \textit{override.dump}. Mo¿e 
byæ on modyfikowany przez u¿ytkownika poprzez interfejs \textit{cmd} widoczny
po lewej stronie diagramu. Jest to wystawiony nas³uchuj±cy port umo¿liwiaj±cy
wykonanie kilku interesuj±cych poleceñ na dzia³aj±cym testerze. Co szczegó³owo
mo¿na wykonaæ opiszê w~nastêpnym rozdziale.

[EN]
\noindent On the diagram left side there is tester (surealived),
composite by two processes -- \textbf{watchdog} and~\textbf{tester}.
On the right side there's oneprocess \textbf{synchronizer} (ipvssync) connected
to IPVS.
On the middle there are files and directories directly related in data exchange
between tester and synchronizer.

Most important file common both to tester and synchronizer is 
\textit{surealived.cfg}, which detail syntax will be explained in next section.
This is simple \textit{''key value''} file which describes runtime parameters
for mentioned aplications.

Tester takes it's services definitions from \textit{services.xml} file%
\footnote{Of course this file can be named completely different, for that
doc we assumed that is \textit{services.xml}.}. 
Reals view, their weights and its online/offline states are overrides by
two files -- \textit{offline.dump} and \textit{override.dump}. Tester
saves failed reals to the \textit{offline.dump}. After restart this file
is honoured so previously offlined real will be offline at start.
Second file which overrides xml config is \textit{override.dump}. It can be
modified by \textit{cmd} interface which was drawn at left side of the diagram.
It is listening port using which you can perform some interesting command
on running tester application. I'll describe in next section.

[PL]
Podczas startu tester \textit{wymusza} zbudowanie konfiguracji synchronizatora
\textit{ipvsfull.cfg} i inicjuje zapisywanie plików ró¿nicowych w katalogu
\textit{diffs}. Chodzi o to, by przy ka¿dym wykrytym nieprawid³owo dzia³aj±cym
serwerze nie zapisywaæ od razu ca³ej konfiguracji a jedynie ró¿nicê. St±d te¿
plik \textit{ipvsfull.cfg} zmienia siê co 60 sek. a wszelkie zmiany w stosunku
do g³ównej konfiguracji s± w ostatnim, bie¿±cym pliku ró¿nicowym. Dwa bardzo 
wa¿ne zbiory bior±ce w tym udzia³ to plik muteksuj±cy dostêp do konfiguracji
synchronizatora -- \textit{ipvsfull.lock} oraz flaga konieczno¶ci prze³adowania
konfiguracji -- \textit{ipvsfull.reload}. Po restarcie testera stan IPVS 
z jego punktu widzenia jest nieznany, dlatego te¿ po zbudowaniu konfiguracji
\textit{ipvsfull.cfg} wskazuje on konieczno¶æ pe³nej modyfikacji IPVS poprzez
za³o¿enie pliku \textit{ipvsfull.reload}. Tego pliku regularnie poszukuje 
\textbf{ipvssync} i przypadku znalezienia czyta now± konfiguracjê, wprowadza
zmiany do IPVS po czym usuwa zbiór \textit{ipvsfull.reload}. Podczas dzia³ania
\textbf{ipvssync} wie w którym pliku ró¿nicowym siê znajduje i usuwa z katalogu
\textit{diffs} wszystkie stare zbiory. 

Tester daje mo¿liwo¶æ zapisu statystyk w katalogu \textit{stats}. Mo¿e zapisywaæ
zarówno do jednego wspólnego zbioru \textit{sd\_fullstats.log} a tak¿e zbiorów
z pojedynczego testu -- \textit{sd\_virtstats*.TIMESTAMP}. W~przypadku zapisu
do pojedynczych zbiórów nale¿y zadbaæ o usuwanie tych zbiorów z katalogu 
\textit{stats}%
\footnote{Mo¿na zapi±æ w cronie usuwanie lub w~ogóle nie w³±czaæ zapisu do tych
zbiorów poprzez ustawienie ''\textit{log\_stats false}'' w~pliku 
\textit{surealived.cfg}.}.

[EN]
When tester starts it \textit{enforces} synchronizer configuration
\textit{ipvsfull.cfg} rebuild and initiates saving diffs files in 
\textit{diffs} directory. When real server will fail there's no point
to save whole configuration but the difference only. That's why 
\textit{ipvsfull.cfg} file is changing every 60 seconds and all changes
to this file in the last, current difference file. Other two important
files are mutex file \textit{ipvsfull.lock} and reload flag \textit{ipvsfull.reload}.
After tester restart IPVS state is unknown from its point of view, that's why
after \textit{ipvsfull.cfg} rebuild it points to synchronizer to reconfigure
whole IPVS table. File \textit{ipvsfull.reload} is constantly searched by
\textbf{ipvssync} and if it will find that file it will read new configuration,
synchronize to IPVS and remove the flag. When synchronizer works it 
also checks older than current different file in \textit{diffs} directory
and removes them.

Tester also gives you possibilities to save test statistics in \textit{stats}
directory. It can saves to one common file \textit{sd\_fullstats.log} as well as to 
separated \textit{sd\_virtstats*.TIMESTAMP} files. When you deceide to use
single tests statistics files be careful -- \textit{stats} directory will
be grown very fast%
\footnote{You can configure files removal in your cron or you can disable
saving to these files by setting ''\textit{log\_stats false}'' in  
\textit{surealived.cfg} config file.}.

[PL]
\subsection{Uruchamianie testera}
Zanim zostanie uruchomiony po raz pierwszy synchronizator 
musi zostaæ uruchomiony tester, zwi±zane jest to z utworzeniem
konfiguracji \textit{ipvsfull.cfg}.

By uzyskaæ listê mo¿liwych opcji przy uruchamianiu testera
wystarczy u¿yæ opcji \textbf{-h}.

[EN]
\subsection{Starting the tester}
Before you start synchronizer first time there must be started
tester due to create synchronizer \textit{ipvsfull.cfg} config file.

To see whole possible tester options try to use \textbf{-h} switch.

[ALL]
{
\small
\begin{verbatim}
wegorz@zaphod:~$ surealived -h
=== SureAliveD v.0.8.7 ===
Usage: surealived [options] <xml_config_file>
Ex   : surealived -c /root/sd_new.conf -vv -d test_http.xml

Options:
        --help          -h              This help info
        --test-config   -t              Test configuration and exit
        --config        -c <path>       Use <path> as config file
        --verbose       -v              Increase verbosity level
        --daemonize     -d              Run in background (daemonize)
        --no-sync       -n              Do not write sync info
        --no-dumpfile   -k              Do not load and create offline.dump
        --version       -V              Show Version information
\end{verbatim}
}

[PL]
\noindent Bardzo u¿yteczn± opcj± jest \textbf{-t}, pozwalaj±ca przetestowaæ poprawno¶æ
xmlowego pliku konfiguracyjnego serwisów. Standardowo kody wyj¶cia z programu
oznaczaj±: 0 -- ok, ró¿ny od 0 -- b³±d. 

~

\noindent W normalnym produkcyjnym ¶rodowisku zazwyczaj tester bêdzie uruchamiany
jako demon:
\begin{verbatim}
wegorz@zaphod:~$ surealived -d /etc/surealived/services.xml
\end{verbatim}

Nale¿y pamiêtaæ, ¿e w przypadku uruchamiania testera jako demona wszelkie
komunikaty o b³êdach pojawi± siê w \textit{/var/log/surealived/surealived.log}
o ile istnieje mo¿liwo¶æ zapisu do takiego zbioru. Dlatego przed produkcyjnym
uruchomieniem najlepiej jest przetestowaæ czy tester bez problemu podniesie
siê jako proces pierwszoplanowy:
\begin{verbatim}
wegorz@zaphod:~$ surealived -vvv /etc/surealived/services.xml
\end{verbatim}

[EN]
\noindent Very useful is \textbf{-t} option, which allows you to 
check services xml config syntax. Return codes are standard
0 -- ok, not equal to 0 -- error. 

~

\noindent In production environment tester will be executed as demonized:
W normalnym produkcyjnym ¶rodowisku zazwyczaj tester bêdzie uruchamiany
\begin{verbatim}
wegorz@zaphod:~$ surealived -d /etc/surealived/services.xml
\end{verbatim}

You need to remember, that in executing tester as daemonized all error 
messages will be saved to \textit{/var/log/surealived/surealived.log}
only if tester can write to that file. Thats why I suggest to run tester
in foreground to find out if there won't be problem when it will be 
executed as daemonized:
\begin{verbatim}
wegorz@zaphod:~$ surealived -vvv /etc/surealived/services.xml
\end{verbatim}

[PL]
\subsection{Uruchamianie synchronizatora}
Je¶li istnieje plik konfiguracyjny dla synchronizatora mo¿emy 
go uruchomiæ -- koniecznie z uprawnieniami roota, gdy¿ modyfikuje
on IPVS.

By uzyskaæ listê mo¿liwych opcji przy uruchamianiu synchronizatora
wystarczy u¿yæ opcji \textbf{-h}.

[EN]
\subsection{Starting the synchronizer}
If configuration file for synchronizer exists we can start it
-- mandatory from root account, because it need to modify IPVS.

To see all possible options which can be use at synchronizer start
use \textbf{-h} switch.
[ALL]
{
\small
\begin{verbatim}
zaphod:~# ipvssync -h
=== IPVSSync v.0.8.7 ===
Usage: ipvssync [options]
Ex   : ipvssync -c /home/surealived/surealived.cfg

Options:
        --help          -h           This help info
        --test-config   -t           Test ipvsfull.cfg configuration and exit
        --config        -c           Config file (default /etc/surealived/surealived.cfg)
        --verbose       -v           Increase verbosity level
        --daemonize     -d           Run in background (daemonize)
        --del-umanaged  -u           Delete unmanaged virtuals from IPVS table
        --keep-diffs    -k           Don't remove processed diff files
        --version       -V           Show Version information
\end{verbatim}
}

[PL]
\noindent Zanim jednak uruchomimy synchronizator mo¿emy przetestowaæ poprawno¶æ 
pliku \textit{ipvsfull.cfg} wykorzystuj±c opcjê \textbf{-t}.
Standardowo kody wyj¶cia z programu oznaczaj±: 0 -- ok, ró¿ny od 0 -- b³±d. 

Opcje które zmieniaj± zachowanie synchronizatora to \textbf{-u} oraz \textbf{-k}.
Pierwsza z nich powoduje, ¿e \textbf{ipvssync} dzia³a w takim trybie, ¿e pozbywa
siê wszystkich niezdefiniowanych w pliku \textit{ipvsfull.cfg} wirtuali. Je¶li wiêc
dodasz co¶ z rêki do IPVS przy prze³adowaniu konfiguracji synchronizator usunie
to z tablicy. Druga wspomniana opcja wy³±cza usuwanie plików ró¿nicowych w katalogu
\textit{diffs}. 

[EN]
\noindent Before we'll start the synchronize we can check \textit{ipvsfull.cfg}
syntax using \textbf{-t} option.
Return exit codes are standard: 0 -- ok, not equal to 0 -- error.

Options which changes synchronization runtime behaviour are \textbf{-u} oraz \textbf{-k}.
First of them causes, that \textbf{ipvssync} removes all virtuals not listed in its
configuration file. So if you'll add a virtual to IPVS by hand when synchronizer
will be reloaded your changes will be removed from IPVS. Second mentioned options
turns off removing old diff files from \textit{diffs} directory.

[PL]
\subsection{Ogólne uwagi odno¶nie uruchamiania}

Obie aplikacje zaleca siê uruchomiæ produkcyjnie z logowaniem typu \textit{info}.
W~logach obu aplikacji pojawi± siê najbardziej u¿yteczne informacje zwi±zane
z prac± zarówno testera jak i synchronizatora. W~przypadku testowania konfiguracji
najlepiej jest aplikacje uruchomiæ z parametrem \textit{'-vvv'}, bez wprowadzenia
ich w tryb demona.

[EN]
\subsection{Some notes about starting applications}

The most preferred logging type is to use \textit{info} detail. You'll get 
most useful informations about running tester as well as synchronizer.
When you'll try to start these applications to checkout what's going on start them
in foreground use \textit{'-vvv'}. That will suppress to start them in daemonized
environment giving you important messages about them.

[ALL]
\newpage
