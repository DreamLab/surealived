[PL]
\section{Uruchomienie}

\subsection{Schemat dzia³ania}
Na poni¿szym diagramie przedstawiony jest schemat przep³ywu
danych pomiêdzy testerem a~synchronizatorem.
[EN]
\section{Deployment}
\subsection{Flow diagram}

[ALL]
\begin{center}
\epsfig{file=sd-diagram,width=13cm}
\end{center}

[PL]
\noindent Po lewej stronie diagramu znajduje siê tester (surealived),
z³o¿ony z dwóch procesów -- \textbf{watchdoga} i~\textbf{testera}.
Po prawej stronie jest jednoprocesowy synchronizator (ipvssync) wpiêty do IPVS
-- \textbf{synchronizer}.
Na ¶rodku diagramu umieszczone zosta³y pliki i~katalogi bior±ce udzia³
w wymianie danych miêdzy aplikacjami. 

Kluczowym plikiem wspólnym dla testera i synchronizatora jest 
\textit{surealived.cfg}, którego sk³adnia opisana jest w nastêpnym
rozdziale. Jest to prosty plik typu \textit{''klucz warto¶æ''} opisuj±cy
parametry dzia³ania obu aplikacji.

Tester definicjê us³ug do przetestowania bierze z pliku \textit{services.xml}%
\footnote{Oczywi¶cie plik ten mo¿e siê nazywaæ zupe³nie inaczej, my za³o¿yli¶my,
¿e jest to akurat \textit{services.xml}.}. 
Widok reali, ich wag i to czy s± wpiête przes³aniane jest przez dwa pliki --
\textit{offline.dump} oraz \textit{override.dump}. Plik \textit{offline.dump}
jest zapisywany przez tester i zawiera reale, których nie uda³o siê poprawnie
przetestowaæ. Dziêki temu po starcie podejrzane serwery nie s± wpinane lub
wpinane z wag± = 0 do IPVS.
Plik, który równie¿ przes³ania konfiguracjê to \textit{override.dump}. Mo¿e 
byæ on modyfikowany przez u¿ytkownika poprzez interfejs \textit{cmd} widoczny
po lewej stronie diagramu. Jest to wystawiony nas³uchuj±cy port umo¿liwiaj±cy
wykonanie kilku interesuj±cych poleceñ na dzia³aj±cym testerze. Co dok³adnie
mo¿na wykonaæ zosta³o opisane w~nastêpnym rozdziale.

[EN]
\noindent Diagram below illustrates information flow between tester and synchronizer.
On the left side of the diagram we see the tester (surealived), 
composed of two processes -- \textbf{watchdog} and~\textbf{tester}.
On the right side we have the \textbf{synchronizer} (ipvssync), composed of a single
process, connected to IPVS.
And in the middle are the files and directories directly involved in data exchange
between the tester and the synchronizer.

The most important file, common to both the tester and the synchronizer, is 
\textit{surealived.cfg}, whose syntax will be explained in detail in the next chapter.
It is a simple key-value pair TODO(usunalem jakis tag tutaj) file which defines runtime parameters
for both applications mentioned above.

Tester reads its service definitions from \textit{services.xml} file%
\footnote{this file could be named completely different of course, here
we assumed that it's named \textit{services.xml}.}. 
Reals view, their weights and their online/offline states are overridden by
two files -- \textit{offline.dump} and \textit{override.dump}. Tester
saves TODO(lista?) the list of offline reals to the \textit{offline.dump}, and after restart, info from this file will cause previously-offlined reals to remain offlined.
Second file which overrides xml config is \textit{override.dump}. It can be
modified by \textit{cmd} interface (drawn on the left side of the diagram),
which also listens on a port, allowing you to perform some intersting commands on the tester while it's running.  It is described in next chapter.

[PL]
Podczas startu tester \textit{wymusza} zbudowanie konfiguracji synchronizatora
\textit{ipvsfull.cfg} i inicjuje zapisywanie plików ró¿nicowych w katalogu
\textit{diffs}. Chodzi o to, by przy ka¿dym wykrytym nieprawid³owo dzia³aj±cym
serwerze nie zapisywaæ od razu ca³ej konfiguracji a jedynie ró¿nicê. St±d te¿
plik \textit{ipvsfull.cfg} zmienia siê co 60 sek. a wszelkie zmiany w stosunku
do g³ównej konfiguracji s± w ostatnim, bie¿±cym pliku ró¿nicowym. Dwa bardzo 
wa¿ne zbiory bior±ce w tym udzia³ to plik muteksuj±cy dostêp do konfiguracji
synchronizatora -- \textit{ipvsfull.lock} oraz flaga konieczno¶ci prze³adowania
konfiguracji -- \textit{ipvsfull.reload}. Po restarcie testera stan IPVS 
z jego punktu widzenia jest nieznany, dlatego te¿ po zbudowaniu konfiguracji
\textit{ipvsfull.cfg} wskazuje on konieczno¶æ pe³nej modyfikacji IPVS poprzez
za³o¿enie pliku \textit{ipvsfull.reload}. Tego pliku regularnie poszukuje 
\textbf{ipvssync} i w przypadku znalezienia czyta now± konfiguracjê, wprowadza
zmiany do IPVS po czym usuwa zbiór \textit{ipvsfull.reload}. Podczas dzia³ania
\textbf{ipvssync} wie w którym pliku ró¿nicowym siê znajduje i usuwa z katalogu
\textit{diffs} wszystkie stare zbiory. 

Tester daje mo¿liwo¶æ zapisu statystyk w katalogu \textit{stats}. Mo¿e zapisywaæ
zarówno do jednego wspólnego zbioru \textit{sd\_fullstats.log} a tak¿e zbiorów
z pojedynczego testu -- \textit{sd\_virtstats*.TIMESTAMP}. W~przypadku zapisu
do pojedynczych zbiórów nale¿y zadbaæ o usuwanie tych zbiorów z katalogu 
\textit{stats}%
\footnote{Mo¿na zapi±æ w cronie usuwanie lub w~ogóle nie w³±czaæ zapisu do tych
zbiorów poprzez ustawienie ''\textit{log\_stats false}'' w~pliku 
\textit{surealived.cfg}.}.

[EN]
When the tester starts, it \textit{forces} rebuilding of synchronizer configuration
\textit{ipvsfull.cfg} and initiates saving of diff files in 
\textit{diffs} directory. The point is to only save the difference (rather than the entire configuration file) for every time a real server goes down.
. That's why 
\textit{ipvsfull.cfg} file is changing every 60 seconds and all changes
 relative to the main configuration are kept in TODO(nie rozumiem): last, current difference file. The other two important
files are the mutex file \textit{ipvsfull.lock} and the reload flag \textit{ipvsfull.reload}.
After tester restart, IPVS state is unknown from tester's point of view, that's why
after rebuilding \textit{ipvsfull.cfg} it flags to synchronizer via creation of file \textbf{ipvssync} to reconfigure the
whole IPVS table. Presence of file \textit{ipvsfull.reload} is constantly searched for by
\textbf{ipvssync} and if it finds that file it will read in the new configuration,
synchronize IPVS and remove the flag.  During its operation, synchronizer remembers which diff file it is working on (current diff file) and removes all old
diff files in \textit{diffs} directory.

Tester also has an ability to save test statistics in \textit{stats}
directory. It can save stats to one common file \textit{sd\_fullstats.log} as well as to 
separate \textit{sd\_virtstats*.TIMESTAMP} files. When you deceide to use
single test statistics files be careful -- \textit{stats} directory will
grow very fast%
\footnote{You can configure file removal in your cron or you can disable
logging statistics to these files by setting ''\textit{log\_stats false}'' in  
\textit{surealived.cfg} config file.}.

[PL]
\subsection{Uruchamianie testera}
Przed uruchomieniem synchronizatora po raz pierwszy, konieczne jest
uruchomienie testera, zwi±zane jest to z utworzeniem konfiguracji \textit{ipvsfull.cfg}

By uzyskaæ listê mo¿liwych opcji przy uruchamianiu testera
wystarczy u¿yæ opcji \textbf{-h}.

[EN]
\subsection{Starting the tester}
In order to create synchronizer's config file \textit{ipvsfull.cfg},
it is necessary to run tester at least once before running synchronizer for the first time,

To see all possible tester options use \textbf{-h} switch.

[ALL]
{
\small
\begin{verbatim}
wegorz@zaphod:~$ surealived -h
=== SureAliveD v.0.8.7 ===
Usage: surealived [options] <xml_config_file>
Ex   : surealived -c /root/sd_new.conf -vv -d test_http.xml

Options:
        --help          -h              This help info
        --test-config   -t              Test configuration and exit
        --config        -c <path>       Use <path> as config file
        --verbose       -v              Increase verbosity level
        --daemonize     -d              Run in background (daemonize)
        --no-sync       -n              Do not write sync info
        --no-dumpfile   -k              Do not load and create offline.dump
        --version       -V              Show Version information
\end{verbatim}
}

[PL]
\noindent Bardzo u¿yteczn± opcj± jest \textbf{-t}, pozwalaj±ca przetestowaæ poprawno¶æ
xmlowego pliku konfiguracyjnego serwisów. Standardowo kody wyj¶cia z programu
oznaczaj±: 0 -- ok, ró¿ny od 0 -- b³±d. 

~

\noindent W normalnym produkcyjnym ¶rodowisku zazwyczaj tester bêdzie uruchamiany
jako demon:
\begin{verbatim}
wegorz@zaphod:~$ surealived -d /etc/surealived/services.xml
\end{verbatim}

Nale¿y pamiêtaæ, ¿e w przypadku uruchamiania testera jako demona wszelkie
komunikaty o b³êdach pojawi± siê w \textit{/var/log/surealived/surealived.log}
o ile istnieje mo¿liwo¶æ zapisu do takiego zbioru. Dlatego przed produkcyjnym
uruchomieniem najlepiej jest przetestowaæ czy tester bez problemu podniesie
siê jako proces pierwszoplanowy:
\begin{verbatim}
wegorz@zaphod:~$ surealived -vvv /etc/surealived/services.xml
\end{verbatim}

[EN]
\noindent \textbf{-t} is a very useful option - it allows you to 
check services TODO:(s?) xml config syntax. Return codes are standard
0 -- ok, not equal to 0 -- error. 

~

\noindent Typically in production environment, the tester will be running as a daemon:
\begin{verbatim}
wegorz@zaphod:~$ surealived -d /etc/surealived/services.xml
\end{verbatim}

You need to remember, that executing tester as a daemon will cause all error 
messages to be saved to \textit{/var/log/surealived/surealived.log}
only if tester can write to that file. Therefore it's recommended to run the tester
in the foreground first to make sure it won't be running into problems when it will be 
executed as daemon:
\begin{verbatim}
wegorz@zaphod:~$ surealived -vvv /etc/surealived/services.xml
\end{verbatim}

[PL]
\subsection{Uruchamianie synchronizatora}
Je¶li istnieje plik konfiguracyjny dla synchronizatora mo¿emy 
go (synchronizator) uruchomiæ -- koniecznie z uprawnieniami roota, gdy¿ modyfikuje
on IPVS.

By uzyskaæ listê mo¿liwych opcji przy uruchamianiu synchronizatora
wystarczy u¿yæ opcji \textbf{-h}.

[EN]
\subsection{Starting the synchronizer}
The synchronizer can only be started if its configuration file exists.  
It needs to be run from the root account, because it needs root priviledges to modify IPVS.

To see the list of all possible options which can be used during synchronizer start-up
use \textbf{-h} switch.
[ALL]
{
\small
\begin{verbatim}
zaphod:~# ipvssync -h
=== IPVSSync v.0.8.7 ===
Usage: ipvssync [options]
Ex   : ipvssync -c /home/surealived/surealived.cfg

Options:
        --help          -h           This help info
        --test-config   -t           Test ipvsfull.cfg configuration and exit
        --config        -c           Config file (default /etc/surealived/surealived.cfg)
        --verbose       -v           Increase verbosity level
        --daemonize     -d           Run in background (daemonize)
        --del-umanaged  -u           Delete unmanaged virtuals from IPVS table
        --keep-diffs    -k           Don't remove processed diff files
        --version       -V           Show Version information
\end{verbatim}
}

[PL]
\noindent Zanim jednak uruchomimy synchronizator mo¿emy przetestowaæ poprawno¶æ 
pliku \textit{ipvsfull.cfg} wykorzystuj±c opcjê \textbf{-t}.
Standardowo kody wyj¶cia z programu oznaczaj±: 0 -- ok, ró¿ny od 0 -- b³±d. 

Opcje które zmieniaj± zachowanie synchronizatora to \textbf{-u} oraz \textbf{-k}.
Pierwsza z nich powoduje, ¿e \textbf{ipvssync} dzia³a trybie usuwania
wszystkich niezdefiniowanych w pliku \textit{ipvsfull.cfg} wirtuali. Je¶li wiêc
zostanie co¶ dodane ''z rêki'' do IPVS przy prze³adowaniu konfiguracji synchronizator usunie
to z tablicy. Druga wspomniana opcja wy³±cza usuwanie plików ró¿nicowych w katalogu
\textit{diffs}. 

[EN]
\noindent Before we start the synchronizer, we can validate \textit{ipvsfull.cfg}
syntax using \textbf{-t} option.
Return exit codes are standard: 0 -- ok, not equal to 0 -- error.

Options which change synchronization runtime behaviour are \textbf{-u} and \textbf{-k}.
First of them causes, \textbf{ipvssync} to remove all virtuals not listed in its
configuration file. So if you add a virtual to IPVS by hand, your changes will be removed from IPVS when synchronizer reloads its configuration. Second mentioned option
turns off removing old diff files from \textit{diffs} directory.

[PL]
\subsection{Ogólne uwagi odno¶nie uruchamiania}

Obie aplikacje zaleca siê uruchomiæ produkcyjnie z logowaniem typu \textit{info}.
W~logach obu aplikacji pojawi± siê najbardziej u¿yteczne informacje zwi±zane
z prac± zarówno testera jak i synchronizatora. W~przypadku testowania konfiguracji
najlepiej jest aplikacje uruchomiæ z parametrem \textit{'-vvv'}, bez wprowadzenia
ich w tryb demona.

[EN]
\subsection{Some notes about starting applications}

It is recommended to set logging to \textit{info} detail level in production environments. This level will provide you with 
most useful information regarding tester's and synchronizer's runtime status.
When trying out a configuration, it's better to start these applications 
in foreground and use \textit{'-vvv'} and have all messages written to stdout (TODO dobrze mowie?).

[ALL]
\newpage
