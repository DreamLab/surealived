[ALL]
\thispagestyle{empty}
~
\vspace{20em}
~
\begin{center}
  \epsfig{file=surealived-logo, width=8cm}
  \textit{ver. 0.8.7}
\end{center}
\newpage

\tableofcontents
\newpage

[PL]
\section{Wprowadzenie}
\textit{Linux Virtual Server (LVS)} jest jednym z najbardziej wydajnych
serwerów balansowania ruchu. W ¶rodowiskach, gdzie istniej±
setki (jak nie tysi±ce) us³ug wpiêtych do \textit{LVS}, prawdziwym
wyzwaniem staje siê ich przetestowanie i podjêcie w³a¶ciwej akcji
(wypiêcie / wpiêcie serwera). Problemem skalowania w~tej materii
jest tak¿e niewielki wybór aplikacji testuj±cych, w szczegolno¶ci
dla \textit{LVSów}, gdzie wpiêtych jest wiele serwerów a czêstotliwo¶æ
testu nie powinna byæ d³u¿sza ni¿ kilka sekund. Takie za³o¿enie
zdecydowanie ogranicza listê mo¿liwych do zastosowania aplikacji,
gdy¿ musz± one byæ oparte o multipleksowane IO (select/poll/epoll).
Do tej pory jedyn± aplikacj± spe³niaj±c± te wymagania by³ \textit{keepalived}.
Ze wzglêdu na b³êdy i pewne braki funkcjonalne w \textit{keepalived}
zdecydowali¶my siê napisaæ od zera tester us³ug. Nazwali¶my go do¶æ
przewrotnie \textit{SureAliveD}, ze wzglêdu na to, i¿ chcemy byæ pewni,
¿e wpiête do \textit{LVSa} us³ugi dzia³aj±.

[EN]
\section{Introduction}
\textit{Linux Virtual Server (LVS)} is one of the most efficient
traffic-balancing servers. In environments containing hundreds (if not thousands)
of services plugged into \textit{LVS}, it's becoming a challenge to
test services and make the right decision about plugging the server in or out.
Another problem regarding scalability in this matter is the lack of testing applications
TODO especially for \textit{LVS}, where there are many servers plugged in and test 
frequency should not be longer than few seconds. That requirement reduces
list of usable applications, because they have to be based on multiplexed IO
(select/poll/epoll). So far the only application satisfying these requirements
was \textit{keepalived}. Because of its bugs and lack of some functionalities
we decided to write a new service tester from scratch.
We called it \textit{SureAliveD}, because we wanted to make \underline{sure}
that services plugged into \textit{LVS} are working.

[PL]
\subsection{Czym jest i jak dzia³a \textit{SureAliveD}?}
\textit{SureAliveD} jest bardzo efektywnym testerem serwerów \textit{real}
wpiêtych do LVSa. Zdecydowali¶my siê na odseparowanie warstwy
testuj±cej od modyfikuj±cej zmiany w~j±drze linuksa (w~tablicy
\textit{IPVS}). Aplikacjê testuj±c± dostêpno¶æ reali nazwali¶my
\textbf{surealived}, natomiast synchronizator zmian w~\textit{IPVS}
\textbf{ipvssync}.

[EN]
\subsection{What \textit{SureAliveD} is and how it works?}
\textit{SureAliveD} is a very effective \textit{real} server tester
plugged into LVS. We decided to separate testing layer from the one
modifying linux kernel (in \textit{IPVS} table). Application which
tests real's availability is called \textbf{surealived}, and \textit{IPVS}
which changes synchronizer is called \textbf{ipvssync}.

[PL]
Podstawowym za³o¿eniem aplikacji by³o zast±pienie stosowanego do
tej pory \textit{keepalived} w~czê¶ci testuj±cej. \textit{Keepalived}
¶wietnie sprawuje siê tam, gdzie nie ma potrzeby czêstego grzebania
w~konfiguracji. W~du¿ych ¶rodowiskach, gdzie do LVSa wpiête s± setki
us³ug, problematyczna staje siê ka¿dorazowa konieczno¶æ prze³adowania
ca³o¶ci konfiguracji (nawet przy potrzebie zmiany wagi pojedynczego
serwera). Przy czêstym prze³adowywaniu konfiguracji uwidaczniaj± siê
b³êdy takie jak:
\begin{itemize}
  \item zaniechanie testowania niektórych us³ug
  \item segfaultowanie testera
  \item pozostawienie otwartych deskryptorów
  \item brak mo¿liwo¶ci przetestowania poprawno¶ci sk³adni pliku konfiguracyjnego
  \item czyszczenie tablicy \textit{IPVS}%
    \footnote{Istnieje owszem opcja uruchomienia \textbf{keepalived}
      z pozostawieniem starych wpisów, jednak od tego momentu przestaje siê on
      ''interesowaæ'' serwerami, których nie ma ju¿ w~konfiguracji a~pozosta³y
      w~\textit{IPVS} -- i~zamiast usuwaæ pozostawia je nietkniête z~uprzednio
      ustawion± wag±.}.
\end{itemize}

[EN]
Our main goal was to replace \textit{keepalived} in its testing duty.
\textit{Keepalived} works great where there is no need to change
configuration frequently. In big environments, where there are hundreds
services plugged into LVS, it's problematic to reload the whole configuration
each time (even if all we need is to change just one server's weight).
Frequent configuration reloading brings out the bugs in \textbf{KeepaliveD} such as:
\begin{itemize}
  \item failure to test some services
  \item tester's segfaulting
  \item leaving open file descriptors
  \item lack of config file validation
  \item clearing \textit{IPVS} table%
    \footnote{There is indeed an option to start \textbf{keepalived} and
      leave old entries, but from that moment on \textbf{keepalived} is no
      longer ''interested'' in servers which are not in the configuration
      but still remain in \textit{IPVS} table -- but it leaves them intact with
      previously set weight instead of removing them.}.
\end{itemize}
      
[ALL]
\newpage

[PL]
\subsection{Charakterystyka \textbf{surealived}}
Oto podstawowe cechy testera -- \textbf{surealived}:
\begin{itemize}
\item oparty na epollu,
\item posiada rozszerzaln± XMLow± konfiguracjê (rozparsowywaln±
  przez modu³),
\item testery us³ug s± w~rzeczywisto¶ci ³adowanymi dynamicznie
  modu³ami -- daje to mo¿liwo¶æ ³atwego dodawania nowych
  testerów kolejnych us³ug,
\item obecnie zaimplementowane modu³y testuj±ce
  protokó³ TCP, HTTP, DNS, exec (uruchomienie zewnêtrznego
  testera) oraz no-test (traktowanie serwera jako dostêpnego)
\item ma wbudowan± przezroczyst± obs³ugê SSL (wystarczy ustawiæ
  atrybut SSL=''1'' przy konfiguracji testera).
\item zapisuje statystyki po³±czeñ do poszczególnych serwerów
  (czas po³±czenia i czas odpowiedzi),
\item trzyma tablicê stanów serwerów, których test siê nie powiód³,
  a tak¿e tablicê przes³aniaj±c± bie¿±c± konfiguracjê (stan
  serwera oraz wagi), stany te s± honorowane po restarcie,
\item na starcie nastêpuje zapisanie stanu dla \textbf{ipvssync}
  i wymuszenie synchronizacji konfiguracji z tablic± \textit{IPVS},
\item komunikacja z \textbf{ipvssync} odbywa siê poprzez plik
  konfiguracji dla ipvssync (zapisywany co 60~sek.) oraz pliki
  ró¿nicowe, zapisywane przy ka¿dej zmianie,
\item start testów roz³o¿ony jest w~czasie (1 sek.), co zmniejsza
  obci±¿enie CPU w~przypadku równoczesnego uruchomienia testów
  dla setek reali,
\item umo¿liwia sprawdzenie sk³adni konfiguracji (parametr -t),
\item restart aplikacji nie stanowi problemu,
\item mo¿liwa jest praca \textbf{surealived} tylko jako testera us³ug,
  bez synchronizacji do \textit{IPVS},
\item wystawia port do zarz±dzania (domy¶lnie 1337), umo¿liwiaj±c
  wykonywanie pewnych akcji bez restartowania aplikacji.
\end{itemize}

[EN]
\subsection{\textbf{SureAliveD} characteristics}
These are the main \textbf{surealived} tester features:
\begin{itemize}
\item based on epoll
\item has flexible XML configuration (parsed by module)
\item service testers are in fact dynamically loaded modules
  (DSO - Dynamic Shared Object) -- it allows us to
  implement and add new service testers easily.
\item currently, testing modules are available for TCP protocol, HTTP,
  DNS, exec (executing external tester) and no-test (always treat server
  as available)
\item has built-in transparent SSL support (just set SSL=''1'' attribute
  in tester configuration)
\item writes connection statistics for each server
  (time of connection and answer time)
\item has two additional server state tables -- first holds info
  about servers that failed the test, and second maintains temporary
  configuration which overrides configuration from XML (server state
  and weight), those states are honoured after restart
\item during start-up, configuration for \textbf{ipvssync} is saved
  and synchronization with \textit{IPVS} table is forced.
\item communication with \textbf{ipvssync} takes place via full
  synchronization file (written every 60 seconds) and via differential 
  configuration files (written after every change)
\item start-up of tests is spread out in time (1 sec.), which reduces CPU load
  in case of simultaneous tests starting for hundreds of reals
\item allows checking configuration syntax (-t parameter)
\item application restart is not a problem
\item \textbf{surealived} can work just as a service tester without
  synchronizing with \textit{IPVS}
\item opens and listens on a management port (1337 by default), allowing us
  to perform certain actions without to restart the application
\end{itemize}

[PL]
\subsection{Charakterystyka \textbf{ipvssync}}
Oto cechy synchronizatora \textbf{ipvssync}:
\begin{itemize}
\item u¿ywa konfiguracji generowanej przez \textbf{surealived}
  (\textit{ipvsfull.cfg}) oraz plików ró¿nicowych
\item pozwala na pozostawienie/usuniêcie niezarz±dzanych przez niego
  \textit{wirtuali} z \textbf{IPVS}, w~przypadku \textit{reali}
  pe³na synchronizacja odbywa siê zawsze,
\item mo¿liwe jest sprawdzenie sk³adni konfiguracji (parametr -t),
\item restart aplikacji nie jest problemem, podobnie jak w~przypadku
  restartu \textbf{surealived} nastêpuje wymuszenie pe³nej
  synchronizacji z \textit{IPVS},
\item wymaga dzia³ania z u¿ytkownika root.
\end{itemize}
\newpage

[EN]
\subsection{\textbf{ipvssync} characteristics}
Outlined below are \textbf{ipvssync} synchronizer features:
\begin{itemize}
\item uses configuration generated by \textbf{surealived}, (i.e.
  \textit{ipvsfull.cfg}) and differential config files.
\item allows leaving or deleting unmanaged \textit{virtuals}
  from \textbf{IPVS}, in case of \textit{reals} full synchronization
  always takes place
\item application restart is not a problem (as in the case of
  \textbf{surealived} restart, full synchronization with \textit{IPVS}
  will be forced
\item needs root privileges
\end{itemize}
\newpage
